#!/usr/bin/env php
<?php

ini_set('error_reporting', E_ALL);

function td(...$a) { foreach ($a as $v) var_dump($v); die('td'); }

$file_a = $argv[1];
$file_b = $argv[2];

$n = 0;
$lines_a = array_reduce(
	explode("\n", file_get_contents($file_a)),
	fn(array $carry, string $line) => (array_push($carry, [ count($carry), $line, ])) ? $carry : $carry,
	[] );
if ($lines_a[count($lines_a)-1][1] === '')
	array_pop($lines_a) && array_push($lines_a, null);

$lines_b = array_reduce(
	explode("\n", file_get_contents($file_b)),
	fn(array $carry, string $line) => (array_push($carry, [ count($carry), $line, ])) ? $carry : $carry,
	[] );
if ($lines_b[count($lines_b)-1][1] === '')
	array_pop($lines_b) && array_push($lines_b, null);

printf("--- %s %s\n", $file_a, date('Y-m-d H:i:s O', stat($file_a)['mtime']));
printf("+++ %s %s\n", $file_b, date('Y-m-d H:i:s O', stat($file_a)['mtime']));

printf("@@ -%d,%d +%d,%d @@\n",
	$lines_a[0][0]+1, count($lines_a),
	$lines_b[0][0]+1, count($lines_b) );

foreach ($lines_a as $rcd)
	if ($rcd !== null)
		printf("-%s\n", $rcd[1]);
if (($rcd !== null) || empty($lines_b))
	printf("\\ No newline at the end of file");

foreach ($lines_b as $rcd)
	if ($rcd !== null)
		printf("+%s\n", $rcd[1]);
if (($rcd !== null) || empty($lines_b))
	printf("\\ No newline at the end of file");
